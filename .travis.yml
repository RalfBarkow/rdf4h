# Use new container infrastructure to enable caching
sudo: false

language: haskell

# do not send Travis CI email notifications
notifications:
 email: false

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack

before_install:
# Download and unpack the stack executable
- mkdir -p ~/.local/bin
- export PATH=$HOME/.local/bin:$PATH
- travis_retry curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'

matrix:
  include:

  # Build with the newest GHC and stack.
  # This is an accepted failure, see below.
  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #GHC HEAD"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS=""
    compiler: ": #stack default"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-9"
    compiler: ": #stack 8.0.2"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-11"
    compiler: ": #stack 8.2.2"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-12"
    compiler: ": #stack 8.4.3"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-13"
    compiler: ": #stack 8.6.5"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-14"
    compiler: ": #stack 8.6.5"
    addons: {apt: {packages: [libgmp-dev]}}

  # Nightly builds are allowed to fail
  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #stack nightly"
    addons: {apt: {packages: [libgmp-dev]}}

  # Build on OS X in addition to Linux
  # - env: BUILD=stack ARGS=""
  #   compiler: ": #stack default osx"
  #   os: osx

  # Travis includes an OS X which is incompatible with GHC 7.8.4
  #- env: BUILD=stack ARGS="--resolver lts-2"
  #  compiler: ": #stack 7.8.4 osx"
  #  os: osx

  # - env: BUILD=stack ARGS="--resolver lts-3"
  #   compiler: ": #stack 7.10.2 osx"
  #   os: osx

  # - env: BUILD=stack ARGS="--resolver lts-6"
  #   compiler: ": #stack 7.10.3 osx"
  #   os: osx

  # - env: BUILD=stack ARGS="--resolver lts-7"
  #   compiler: ": #stack 8.0.1 osx"
  #   os: osx

  # - env: BUILD=stack ARGS="--resolver nightly"
  #   compiler: ": #stack nightly osx"
  #   os: osx

  allow_failures:
  - env: BUILD=stack ARGS="--resolver nightly"

# We want to always allow newer versions of packages when building on GHC HEAD
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

# Download and unpack the stack executable
# - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
# - mkdir -p ~/.local/bin
# - |
#   if [ `uname` = "Darwin" ]
#   then
#     travis_retry curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
#   else
#     travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
#   fi

#   # Use the more reliable S3 mirror of Hackage
#   mkdir -p $HOME/.cabal
#   echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
#   echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config

#   if [ "$CABALVER" != "1.16" ]
#   then
#     echo 'jobs: $ncpus' >> $HOME/.cabal/config
#   fi

# install:
# - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
# - if [ -f configure.ac ]; then autoreconf -i; fi
# - |
#   set -ex
#   case "$BUILD" in
#     stack)
#       stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
#       ;;
#     cabal)
#       cabal --version
#       travis_retry cabal update

#       # Get the list of packages from the stack.yaml file
#       PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')

#       cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
#       ;;
#   esac
#   set +ex


script:
  - stack --no-terminal --skip-ghc-check test

# script:
# - |
#   set -ex
#   case "$BUILD" in
#     stack)
#       stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
#       ;;
#     cabal)
#       cabal install --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES

#       ORIGDIR=$(pwd)
#       for dir in $PACKAGES
#       do
#         cd $dir
#         cabal check || [ "$CABALVER" == "1.16" ]
#         cabal sdist
#         PKGVER=$(cabal info . | awk '{print $2;exit}')
#         SRC_TGZ=$PKGVER.tar.gz
#         cd dist
#         tar zxfv "$SRC_TGZ"
#         cd "$PKGVER"
#         cabal configure --enable-tests
#         cabal build
#         cd $ORIGDIR
#       done
#       ;;
#   esac
#   set +ex
